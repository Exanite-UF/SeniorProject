name: Build

on:
  workflow_dispatch:
  push:

jobs:
  linux:
    name: Build for Linux
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Release
          - Debug

    steps:

      - name: Cache .git folder
        uses: actions/cache@v4
        with:
          path: .git
          key: git-{{ hashFiles('**/.gitmodules') }}

      - name: Checkout repository
        uses: actions/checkout@v4.2.0
        with:
          submodules: recursive
          lfs: false

      - name: Cache CMake folder
        uses: actions/cache@v4
        with:
          path: build
          key: cmake-{{ runner.os }}-{{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            cmake-{{ runner.os }}-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev libglu1-mesa-dev libwayland-dev libxkbcommon-dev xorg-dev

      - name: Configure CMake
        run: |
          export CC=gcc
          export CXX=g++
          cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}

      - name: Build
        run: cmake --build build --target VoxelRenderer --config ${{ matrix.configuration }}


  windows:
    name: Build for Windows
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Release
          - Debug

    steps:

      - name: Cache .git folder
        uses: actions/cache@v4
        with:
          path: .git
          key: git-{{ hashFiles('**/.gitmodules') }}

      - name: Checkout repository
        uses: actions/checkout@v4.2.0
        with:
          submodules: recursive
          lfs: false

      - name: Cache CMake folder
        uses: actions/cache@v4
        with:
          path: build
          key: cmake-{{ runner.os }}-{{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            cmake-{{ runner.os }}-

#      - name: Install dependencies
#        run: |
#          choco install opengl

      - name: Configure CMake
        run: |
          set CC=cl
          set CXX=cl
          cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}

      - name: Build
        run: cmake --build build --config ${{ matrix.configuration }}